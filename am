#!/bin/bash
#
# am <hostname> [sudo] [command]
#
# Print a table of matching hosts: am hostname
# Run a command on multiple hosts: am hostname command

set -uo pipefail

conn="ssh -o ConnectTimeout=10 \
          -o BatchMode=yes \
          -o UserKnownHostsFile=/dev/null \
          -o StrictHostKeyChecking=no -t -q"

region="ap-southeast-2"
[ "${1:0:3}" == "us-" ] && region="us-west-2"

results=$(
  aws ec2 describe-instances \
    --region ${region} \
    --output json \
    --filters \
      "Name=tag:Name,Values=*${1}*" \
      "Name=instance-state-name,Values=running" \
    --query \
      "Reservations[*].Instances[].{name:Tags[?Key=='Name'] | [0].Value, \
      id:InstanceId, ip:PrivateIpAddress, type:InstanceType, az:Placement.AvailabilityZone}"
)

if [ ${#} -gt 1 ]; then
  shift # drop hostname
  if [ ${1} == "sudo" ]; then
    shift # drop the word sudo
    read -p 'sudo password: ' -s pass
  fi
  for i in $(echo ${results} | jq -r '.[] | .ip'); do
    echo -e "$(tput bold)* Running: ssh ${i} ${@}$(tput sgr0)"
    if [ -v pass ]; then
      echo "${pass}" | ${conn} ${i} -- sudo -p"\ " -S "${@}"
    else
      ${conn} ${i} -- "${@}"
    fi
    fail=$?
    [ ${fail} != 0 ] && echo "Exited: $fail"
  done
else
  if [ -t 1 ]; then
    echo ${results} | jq -r '.[] | [.name, .id, .ip, .az, .type] | join(" ")' | sort | column -t
  else
    results=$(echo ${results} | jq -r '.[] | .ip')
    echo ${results} # no newlines please
  fi
fi
